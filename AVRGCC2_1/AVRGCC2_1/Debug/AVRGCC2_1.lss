
AVRGCC2_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000013a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000013a  000001ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000090  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000048  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000197  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000ac  00000000  00000000  00000b1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001d9  00000000  00000000  00000bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  00000da4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000d1  00000000  00000000  00000e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000066  00000000  00000000  00000ee5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 0000001e  00000000  00000000  00000f4b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e3       	ldi	r30, 0x3A	; 58
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  7a:	0c 94 9b 00 	jmp	0x136	; 0x136 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <exp1>:


int exp1()
{
 unsigned char z;
 DDRB=0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	87 bb       	out	0x17, r24	; 23
 for (z=0; z<=255; z++)
  86:	80 e0       	ldi	r24, 0x00	; 0
 PORTB=z;
  88:	88 bb       	out	0x18, r24	; 24

int exp1()
{
 unsigned char z;
 DDRB=0xFF;
 for (z=0; z<=255; z++)
  8a:	8f 5f       	subi	r24, 0xFF	; 255
  8c:	fd cf       	rjmp	.-6      	; 0x88 <exp1+0x6>

0000008e <exp2>:
}


int exp2(void)
{
  DDRB=0xFF;
  8e:	8f ef       	ldi	r24, 0xFF	; 255
  90:	87 bb       	out	0x17, r24	; 23
  PORTB=0xAA;
  92:	8a ea       	ldi	r24, 0xAA	; 170
  94:	88 bb       	out	0x18, r24	; 24
  96:	8a e0       	ldi	r24, 0x0A	; 10
  unsigned char z;
  for(z=0;z<10;z++)
  PORTB=~PORTB;
  98:	98 b3       	in	r25, 0x18	; 24
  9a:	90 95       	com	r25
  9c:	98 bb       	out	0x18, r25	; 24
  9e:	81 50       	subi	r24, 0x01	; 1
int exp2(void)
{
  DDRB=0xFF;
  PORTB=0xAA;
  unsigned char z;
  for(z=0;z<10;z++)
  a0:	d9 f7       	brne	.-10     	; 0x98 <exp2+0xa>
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <exp2+0x14>

000000a4 <exp3>:
  return 0;
}


int exp3()
{
  a4:	df 93       	push	r29
  a6:	cf 93       	push	r28
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	29 97       	sbiw	r28, 0x09	; 9
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61
 char mynum[]= {-4,-3,-2,-1,0,+1,+2,+3,+4};
  b8:	de 01       	movw	r26, r28
  ba:	11 96       	adiw	r26, 0x01	; 1
  bc:	eb e6       	ldi	r30, 0x6B	; 107
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	89 e0       	ldi	r24, 0x09	; 9
  c2:	01 90       	ld	r0, Z+
  c4:	0d 92       	st	X+, r0
  c6:	81 50       	subi	r24, 0x01	; 1
  c8:	e1 f7       	brne	.-8      	; 0xc2 <exp3+0x1e>
	 unsigned char z;
	 DDRB=0xFF;
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	fe 01       	movw	r30, r28
  d0:	31 96       	adiw	r30, 0x01	; 1
  while (1);
  return 0;
}


int exp3()
  d2:	ce 01       	movw	r24, r28
  d4:	0a 96       	adiw	r24, 0x0a	; 10
{
 char mynum[]= {-4,-3,-2,-1,0,+1,+2,+3,+4};
	 unsigned char z;
	 DDRB=0xFF;
	 for(z=0;z<=8;z++)
	 PORTB=mynum[z];
  d6:	21 91       	ld	r18, Z+
  d8:	28 bb       	out	0x18, r18	; 24
int exp3()
{
 char mynum[]= {-4,-3,-2,-1,0,+1,+2,+3,+4};
	 unsigned char z;
	 DDRB=0xFF;
	 for(z=0;z<=8;z++)
  da:	e8 17       	cp	r30, r24
  dc:	f9 07       	cpc	r31, r25
  de:	d9 f7       	brne	.-10     	; 0xd6 <exp3+0x32>
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <exp3+0x3c>

000000e2 <exp4>:
	 return 0;
}


int exp4()
{
  e2:	df 93       	push	r29
  e4:	cf 93       	push	r28
  e6:	cd b7       	in	r28, 0x3d	; 61
  e8:	de b7       	in	r29, 0x3e	; 62
  ea:	2b 97       	sbiw	r28, 0x0b	; 11
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	f8 94       	cli
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	cd bf       	out	0x3d, r28	; 61
  unsigned char myList[]="012345ABCD";
  f6:	de 01       	movw	r26, r28
  f8:	11 96       	adiw	r26, 0x01	; 1
  fa:	e0 e6       	ldi	r30, 0x60	; 96
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	8b e0       	ldi	r24, 0x0B	; 11
 100:	01 90       	ld	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	81 50       	subi	r24, 0x01	; 1
 106:	e1 f7       	brne	.-8      	; 0x100 <exp4+0x1e>
  unsigned char z;
  DDRB=0xFF;
 108:	8f ef       	ldi	r24, 0xFF	; 255
 10a:	87 bb       	out	0x17, r24	; 23
 10c:	fe 01       	movw	r30, r28
 10e:	31 96       	adiw	r30, 0x01	; 1
	 while(1);
	 return 0;
}


int exp4()
 110:	ce 01       	movw	r24, r28
 112:	0b 96       	adiw	r24, 0x0b	; 11
{
  unsigned char myList[]="012345ABCD";
  unsigned char z;
  DDRB=0xFF;
  for(z=0;z<10;z++)
  PORTB=myList[z];
 114:	21 91       	ld	r18, Z+
 116:	28 bb       	out	0x18, r18	; 24
int exp4()
{
  unsigned char myList[]="012345ABCD";
  unsigned char z;
  DDRB=0xFF;
  for(z=0;z<10;z++)
 118:	e8 17       	cp	r30, r24
 11a:	f9 07       	cpc	r31, r25
 11c:	d9 f7       	brne	.-10     	; 0x114 <exp4+0x32>
 11e:	ff cf       	rjmp	.-2      	; 0x11e <exp4+0x3c>

00000120 <exp5>:


int exp5()
{
 unsigned char temp;
  DDRB=0x00;
 120:	17 ba       	out	0x17, r1	; 23
  DDRC=0xFF;
 122:	8f ef       	ldi	r24, 0xFF	; 255
 124:	84 bb       	out	0x14, r24	; 20
  while(1)
  {
	temp=PINB;
 126:	86 b3       	in	r24, 0x16	; 22
	PORTC=temp;
 128:	85 bb       	out	0x15, r24	; 21
 12a:	fd cf       	rjmp	.-6      	; 0x126 <exp5+0x6>

0000012c <main>:
}


 int main()
{
	exp2();
 12c:	0e 94 47 00 	call	0x8e	; 0x8e <exp2>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <_exit>:
 136:	f8 94       	cli

00000138 <__stop_program>:
 138:	ff cf       	rjmp	.-2      	; 0x138 <__stop_program>
